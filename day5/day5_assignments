1)
package inheritanceAssignment;

class First{
	private int a;

	public int getA() {
		return a;
	}

	public void setA(int a) {
		this.a = a;
	}

	public First(int a) {
		
		this.a = a;
	}
}
class Second{
	private int b;

	public int getB() {
		return b;
	}

	public void setB(int b) {
		this.b = b;
	}

	public Second(int b) {
		
		this.b = b;
	}
}
public class Two {
	public static void main(String[] args) {
		First first = new First(10);
		Second second = new Second(20);
		System.out.println(first.getA());
		System.out.println(second.getB());
		first.setA(100);
		second.setB(200);
		System.out.println(first.getA());
		System.out.println(second.getB());
	}
}
-------------------------------------------------------------------
2)

package inheritanceAssignment;
class Demo{
	private int a;
	private static int b = 100;
	public int getA() {
		return a;
	}
	public static int getB() {
		return b;
	}
	public Demo(int a) {
		this.a = a;
	}
}
public class Q2 {
	public static void main(String[] args) {
		Demo demo = new Demo(200);
		System.out.println(demo.getA());
		System.out.println(Demo.getB());
	}
}
---------------------------------------------------------------------
3)

package inheritanceAssignment;


class Check{
	int a = 10;
	private int b = 20;
	protected int c = 30;
	public int d = 40;
	public void disp(int k) {
		System.out.println(k);
	}
	public int getB() {
		return b;
	}
	
	
}
public class CheckDemo {
	public static void main(String[] args) {
		Check check = new Check();
		check.disp(check.a);
//		check.disp(check.b);//cannot access directly
		check.disp(check.getB()); //accessed using getter method
		check.disp(check.c);
		check.disp(check.d);
	}
}

-----------------------------------------------------------------------------------------------
4)

package inheritanceAssignment;
class A{
	A(){
		System.out.println("A constrictor");
	}
}
class B extends A{
	B(){
		System.out.println("B constructor");
	}
}
public class Q4 {
	public static void main(String[] args) {
		B b = new B();
	}
}
--------------------------------------------------------------------------------------------------

5)

package inheritanceAssignment;
class Aa{
	Aa(){
		System.out.println("A constrictor");
	}
}
class Bb extends Aa{
	Bb(){
		System.out.println("B constrictor");
	}
}
class Cc extends Bb{
	Cc(){
		System.out.println("C constrictor");
	}
}
public class Q5 {
	public static void main(String[] args) {
		Cc cc = new Cc();
	}
}

--------------------------------------------------------------------------------------------------
6)

package inheritanceAssignment;
class A1{
	A1(){
		System.out.println("A constrictor");
	}
}
class B1 extends A1{
	B1(){
		System.out.println("B constrictor");
	}
}
class C1 extends A1{
	C1(){
		System.out.println("C constrictor");
	}
}
public class Q6 {
	public static void main(String[] args) {
		B1 b1 = new B1();
		C1 c1 = new C1();
	}
}

------------------------------------------------------------------------------------------------
7)

package inheritanceAssignment;
class Parent{
	public void disp() {
		System.out.println("Parent method");
	}
}
class Child extends Parent{
	public void disp() {
		System.out.println("Child method");
	}
}
public class Q7 {
	public static void main(String[] args) {
		Parent child = new Child();
		child.disp();
	}
}

-------------------------------------------------------------------------------------------------
8)

package inheritanceAssignment;
class Parent1{
	public void disp() {
		System.out.println("Parent1 method");
	}
}
class Child1 extends Parent1{
	public void disp(int a) {
		System.out.println("Child1 method");
	}
}
public class Q8 {
	public static void main(String[] args) {
		Child1 child1 = new Child1();
		child1.disp();
		child1.disp(0);
	}
}
--------------------------------------------------------------------------------------------------
9)

package inheritanceAssignment;

class Shape{
	public void draw() {
		System.out.println("Shape draw");
	}
}
class Polygon extends Shape{
	public void draw() {
		System.out.println("Polygon draw ");
	}
}
class Rectangle extends Shape{
	public void draw() {
		System.out.println("Rectangle draw ");
	}
}
class Circle extends Shape{
	public void draw() {
		System.out.println("Circle draw ");
	}
}
public class ShapeDemo {
	public static void main(String[] args) {
		Shape shape1 = new Polygon();
		Shape shape2 = new Rectangle();
		Shape shape3 = new Circle();
		shape1.draw();
		shape2.draw();
		shape3.draw();
		
	}
}
---------------------------------------------------------------------------------------------------

10)

package inheritanceAssignment;

interface Vehicle 
{
	void start();
}
class TwoWheeler implements Vehicle{

	@Override
	public void start() {
		System.out.println("Twowheeler start");
	}
	
}
class ThreeWheeler implements Vehicle{

	@Override
	public void start() {
		System.out.println("Threewheeler start");
	}
	
}
class FourWheeler implements Vehicle{

	@Override
	public void start() {
		System.out.println("Fourwheeler start");
	}
	
}
public class Vdemo {
	public static void main(String[] args) {
		Vehicle v1 = new TwoWheeler();
		Vehicle v2 = new ThreeWheeler();
		Vehicle v3 = new FourWheeler();
		v1.start();
		v2.start();
		v3.start();
	}
}
